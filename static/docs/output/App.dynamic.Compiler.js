Ext.data.JsonP.App_dynamic_Compiler({"subclasses":[],"component":false,"mixins":[],"code_type":"assignment","inheritable":false,"mixedInto":[],"meta":{},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/dynamic.html#App-dynamic-Compiler' target='_blank'>dynamic.js</a></div></pre><div class='doc-contents'><p>Performs the business of compiling <a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">libraries</a>\ninto strands and segments. This class is the preferred method of generating\n<a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">libraries</a>.</p>\n\n<p>The main entry-point method is <a href=\"#!/api/App.dynamic.Compiler-method-compile\" rel=\"App.dynamic.Compiler-method-compile\" class=\"docClass\">compile</a>, which can be passed a JSON string\nand will attempt to compile it into a library, throwing\n<a href=\"#!/api/App.dynamic.DynamlError\" rel=\"App.dynamic.DynamlError\" class=\"docClass\">DynamlErrors</a> upon failure.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-standardMotifs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-property-standardMotifs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-property-standardMotifs' class='name expandable'>standardMotifs</a><span> : Object</span></div><div class='description'><div class='short'>Hash containing configuration objects for each of the standard motifs, indexed by name. ...</div><div class='long'><p>Hash containing configuration objects for each of the standard motifs, indexed by name.</p>\n<p>Defaults to: <code>{&quot;0&quot;: [{name: &quot;m1&quot;, type: &quot;initiator&quot;, structure: &quot;..&quot;, isInitiator: true, domains: [{name: &quot;A&quot;, role: &quot;output&quot;, type: &quot;init&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}]}]}, {name: &quot;m2&quot;, type: &quot;initiator&quot;, isInitiator: true, structure: &quot;...&quot;, domains: [{name: &quot;A&quot;, role: &quot;output&quot;, type: &quot;init&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}]}, {name: &quot;m3&quot;, type: &quot;hairpin&quot;, structure: &quot;.(.)&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;output&quot;, type: &quot;loop&quot;, polarity: &quot;-&quot;, segments: [{name: &quot;c&quot;}, {name: &quot;b*&quot;, role: &quot;&quot;}]}]}, {name: &quot;m4&quot;, type: &quot;hairpin&quot;, structure: &quot;.((..))..&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;output&quot;, type: &quot;loop&quot;, polarity: &quot;-&quot;, segments: [{name: &quot;d&quot;}, {name: &quot;e&quot;}, {name: &quot;c*&quot;, role: &quot;&quot;}]}, {name: &quot;C&quot;, role: &quot;output&quot;, type: &quot;tail&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;toehold&quot;}, {name: &quot;f&quot;, role: &quot;&quot;}, {name: &quot;g&quot;, role: &quot;&quot;}]}]}, {name: &quot;m5&quot;, type: &quot;hairpin&quot;, structure: &quot;.((.))&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;bridge&quot;, type: &quot;loop&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;d&quot;}]}, {name: &quot;C&quot;, role: &quot;structural&quot;, type: &quot;stem&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;&quot;}, {name: &quot;c*&quot;, role: &quot;&quot;}]}]}, {name: &quot;m6&quot;, type: &quot;hairpin&quot;, structure: &quot;.((....))..&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;bridge&quot;, type: &quot;loop&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;d&quot;}]}, {name: &quot;C&quot;, role: &quot;output&quot;, type: &quot;loop&quot;, polarity: &quot;-&quot;, segments: [{name: &quot;e&quot;}, {name: &quot;f&quot;}, {name: &quot;g&quot;}, {name: &quot;c*&quot;}]}, {name: &quot;D&quot;, role: &quot;output&quot;, type: &quot;tail&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;toehold&quot;}, {name: &quot;h&quot;, role: &quot;&quot;}, {name: &quot;i&quot;, role: &quot;&quot;}]}]}, {name: &quot;m7&quot;, type: &quot;hairpin&quot;, structure: &quot;.((..))..&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;output&quot;, type: &quot;loop&quot;, polarity: &quot;-&quot;, segments: [{name: &quot;d&quot;}, {name: &quot;e&quot;}, {name: &quot;c*&quot;, role: &quot;&quot;}]}, {name: &quot;C&quot;, role: &quot;bridge&quot;, type: &quot;stem&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;toehold&quot;}, {name: &quot;e&quot;, role: &quot;&quot;}, {name: &quot;f&quot;, role: &quot;&quot;}]}]}, {name: &quot;m8&quot;, type: &quot;hairpin&quot;, structure: &quot;.((.))..&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;bridge&quot;, type: &quot;loop&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;d&quot;}, {name: &quot;c*&quot;, role: &quot;&quot;}]}, {name: &quot;C&quot;, role: &quot;output&quot;, type: &quot;tail&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;&quot;}, {name: &quot;e&quot;, role: &quot;&quot;}, {name: &quot;f&quot;, role: &quot;&quot;}]}]}, {name: &quot;m9&quot;, type: &quot;hairpin&quot;, structure: &quot;.((.))&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;c&quot;, role: &quot;&quot;}]}, {name: &quot;B&quot;, role: &quot;bridge&quot;, type: &quot;loop&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;d&quot;}, {name: &quot;c*&quot;, role: &quot;&quot;}]}, {name: &quot;C&quot;, role: &quot;null&quot;, type: &quot;stem&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;b*&quot;, role: &quot;&quot;}]}]}, {name: &quot;m1c&quot;, type: &quot;initiator&quot;, isInitiator: true, structure: &quot;....&quot;, domains: [{name: &quot;A&quot;, role: &quot;output&quot;, type: &quot;init&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;&quot;}, {name: &quot;w&quot;, role: &quot;clamp&quot;}, {name: &quot;b&quot;, role: &quot;&quot;}, {name: &quot;x&quot;, role: &quot;clamp&quot;}]}]}, {name: &quot;m19c&quot;, type: &quot;hairpin&quot;, structure: &quot;.(((..)))&quot;, domains: [{name: &quot;A&quot;, role: &quot;input&quot;, polarity: &quot;+&quot;, segments: [{name: &quot;a&quot;, role: &quot;toehold&quot;}, {name: &quot;w&quot;, role: &quot;clamp&quot;}, {name: &quot;b&quot;}, {name: &quot;x&quot;, role: &quot;clamp&quot;}]}, {name: &quot;B&quot;, role: &quot;output&quot;, polarity: &quot;-&quot;, segments: [{name: &quot;y&quot;, role: &quot;clamp&quot;}, {name: &quot;c&quot;}, {name: &quot;x*&quot;, role: &quot;clamp&quot;}, {name: &quot;b*&quot;, role: &quot;toehold&quot;}, {name: &quot;w*&quot;, role: &quot;clamp&quot;}]}]}, {&quot;name&quot;: &quot;m20&quot;, &quot;type&quot;: &quot;hairpin&quot;, &quot;structure&quot;: &quot;.(((....)))..&quot;, &quot;domains&quot;: &quot;A[a:t x:c b c]i+ s[s(1)]x B[d e y:c c*:t]o- C[b*:t x*:c f g]o+&quot;}, {&quot;name&quot;: &quot;m21&quot;, &quot;type&quot;: &quot;hairpin&quot;, &quot;structure&quot;: &quot;.(((...))).&quot;, &quot;domains&quot;: &quot;A[a:t x:c b c]i+ s[s(1)]x B[d(16) y:c c*:t]o- C[b*:t x*:c e(16)]o+&quot;}, {&quot;name&quot;: &quot;m22&quot;, &quot;type&quot;: &quot;cooperative&quot;, &quot;structure&quot;: &quot;.(((((.+)))))&quot;, &quot;strands&quot;: [{&quot;name&quot;: &quot;S1&quot;, &quot;domains&quot;: &quot;A[a:t x:c b(16)]i+ s[s(1)]x B[c(16) y:c d:t]i-&quot;}, {&quot;name&quot;: &quot;S2&quot;, &quot;domains&quot;: &quot;C[y*:c c*(16) s*(1) b*(16) x*:c]x&quot;}]}, {&quot;name&quot;: &quot;m23&quot;, &quot;type&quot;: &quot;initiator&quot;, &quot;structure&quot;: &quot;....&quot;, &quot;domains&quot;: &quot;A[a x:c b c]o+&quot;}, {&quot;name&quot;: &quot;m24&quot;, &quot;type&quot;: &quot;cooperative&quot;, &quot;structure&quot;: &quot;.(((((((((((.+)))))))))))&quot;, &quot;strands&quot;: [{&quot;name&quot;: &quot;S1&quot;, &quot;domains&quot;: &quot;A[a:t x:c b c]i+ s[s(1)]x B[d y:c e f]i- C[g z:c h i:t]i+&quot;}, {&quot;name&quot;: &quot;S2&quot;, &quot;domains&quot;: &quot;D[h* z*:c g*]x E[f* e* y*:c d*]x F[s*(1) c* b* x*:c]x&quot;}]}, {&quot;name&quot;: &quot;m25&quot;, &quot;type&quot;: &quot;initiator&quot;, &quot;structure&quot;: &quot;........&quot;, &quot;domains&quot;: &quot;A[a x:c b y:c]o+ B[z:c c w:c d]o-&quot;}, {&quot;name&quot;: &quot;m26&quot;, &quot;type&quot;: &quot;cooperative&quot;, &quot;structure&quot;: &quot;.(((((((.+)))))))&quot;, &quot;strands&quot;: [{&quot;name&quot;: &quot;S1&quot;, &quot;domains&quot;: &quot;A[a:t x:c b y:c]i+ s[s(1)]x B[z:c c w:c d]i-&quot;}, {&quot;name&quot;: &quot;S2&quot;, &quot;domains&quot;: &quot;C[w* c* z* s*(1) y* b* x*]x&quot;}]}, {name: &quot;m27&quot;, type: &quot;hairpin&quot;, structure: &quot;.(...)&quot;, domains: &quot;A[a b]i+ B[c d]o- C[e b*]o-&quot;}, {name: &quot;m27c&quot;, type: &quot;hairpin&quot;, structure: &quot;.(((..)))&quot;, domains: &quot;A[a:t v:c b w:c]i+ B[x:c c y:c d]o- C[z:c e w*:c b* v*:c]o-&quot;}], &quot;1&quot;: [{name: &quot;m0&quot;, type: &quot;input&quot;, domains: &quot;A[a b x:c d]o+&quot;, structure: &quot;....&quot;}, {name: &quot;m1&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d e y:c c*:t]o- C[b* x*:c]x&quot;, structure: &quot;.(((...)))&quot;, description: &quot;1 input/1 output hairpin&quot;}, {name: &quot;m2&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d e y:c c*:t]o- C[b*:t x*:c f g]o+&quot;, structure: &quot;.(((...)))..&quot;, description: &quot;1 input/2 output hairpin&quot;}, {name: &quot;m2a&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d e y:c c*:t]o- C[b*:t x*:c f(16)]o+&quot;, structure: &quot;.(((...))).&quot;, description: &quot;1 input/2 output hairpin (long tail)&quot;}, {name: &quot;m3&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d]b C[c* b* x*:c]x&quot;, structure: &quot;.(((.)))&quot;, description: &quot;1 input/1 bridge hairpin&quot;}, {name: &quot;m4&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d]b C[e f y c*:t]o- D[b* x*:c]x&quot;, structure: &quot;.(((....)))&quot;, description: &quot;1 input/1 bridge/1 output hairpin&quot;}, {name: &quot;m5&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a:t x:c b c]i+ B[d e y:c c*:t]o- C[b*]b D[x*:c]x&quot;, structure: &quot;.(((...)))&quot;}, {name: &quot;m6a&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d e y:c]x C[f g z:c h]o- D[f* y*:c e* d*]i+ E[b* x*:c]x&quot;, structure: &quot;.((.((((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m6b&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d y:c e]x C[f g z:c h]o- D[f* e* y*:c d*]i+ E[b* x*:c]x&quot;, structure: &quot;.((.((((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m6c&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d e y:c]x C[f z:c g h]o+ D[f* y*:c e* d*]i+ E[b* x*:c]x&quot;, structure: &quot;.((.((((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m6d&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d y:c e]x C[f z:c g h]o+ D[f* e* y*:c d*]i+ E[b* x*:c]x&quot;, structure: &quot;.((.((((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m7a&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d y:c e f]i+ C[g h z:c f*]o- D[e* y*:c c* b* x*:c]x&quot;, structure: &quot;.(((.(((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m7b&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d e y:c f]i- C[g h z:c f*]o- D[y*:c e* c* b* x*:c]x&quot;, structure: &quot;.(((.(((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m7c&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d y:c e f]i+ C[g z:c h f*]o+ D[e* y*:c c* b* x*:c]x&quot;, structure: &quot;.(((.(((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m7d&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d e y:c f]i- C[g z:c h f*]o+ D[y*:c e* c* b* x*:c]x&quot;, structure: &quot;.(((.(((...))))))&quot;, description: &quot;2 input/1 output sequential AND gate&quot;}, {name: &quot;m8a&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a b x:c c]i- B[d e y:c d*]o- C[c* x*:c f g]i+&quot;, structure: &quot;..(((..)))..&quot;, description: &quot;2 input/1 output OR gate&quot;}, {name: &quot;m8b&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a b x:c c]i- B[d y:c e d*]o+ C[c* x*:c f g]i+&quot;, structure: &quot;..(((..)))..&quot;, description: &quot;2 input/1 output OR gate&quot;}, {name: &quot;m9a&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i+ B[d e y:c d*]o- C[c* b* x*:c f]i-&quot;, structure: &quot;.((((..)))).&quot;, description: &quot;2 input/1 output OR gate&quot;}, {name: &quot;m9b&quot;, type: &quot;hairpin&quot;, domains: &quot;A[a x:c b c]i- B[d y:c e d*]o+ C[c* b* x*:c f]i-&quot;, structure: &quot;.((((..)))).&quot;, description: &quot;2 input/1 output OR gate&quot;}, {name: &quot;m10a&quot;, type: &quot;cooperative&quot;, &quot;structure&quot;: &quot;.(((((((.+)))))))&quot;, &quot;strands&quot;: [{&quot;name&quot;: &quot;S1&quot;, &quot;domains&quot;: &quot;A[a:t x:c b c]i+ s[s(1)]x B[d e y:c f:t]i-&quot;}, {&quot;name&quot;: &quot;S2&quot;, &quot;domains&quot;: &quot;C[y*:c e* d* s*(1) c* b* x*:c]x&quot;}]}, {name: &quot;m10b&quot;, type: &quot;cooperative&quot;, &quot;structure&quot;: &quot;.(((((.+)))))&quot;, &quot;strands&quot;: [{&quot;name&quot;: &quot;S1&quot;, &quot;domains&quot;: &quot;A[a:t x:c b(16)]i+ s[s(1)]x B[c(16) y:c d:t]i-&quot;}, {&quot;name&quot;: &quot;S2&quot;, &quot;domains&quot;: &quot;C[y*:c c*(16) s*(1) b*(16) x*:c]x&quot;}]}]}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abbrevRole' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-abbrevRole' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-abbrevRole' class='name expandable'>abbrevRole</a>( <span class='pre'>String type, String str</span> ) : String</div><div class='description'><div class='short'>Given a role name, abbreviates to a compact \"role specifier\"; inverse of\n\nexpandRole. ...</div><div class='long'><p>Given a role name, abbreviates to a compact \"role specifier\"; inverse of</p>\n\n<h1>expandRole.</h1>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p><code>domain</code> or `segment</p>\n</div></li><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The role name to be abbreviated</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>abbrev\nThe role specifier; see <a href=\"#!/api/App.dynamic.Compiler-method-expandRole\" rel=\"App.dynamic.Compiler-method-expandRole\" class=\"docClass\">expandRole</a> for values.</p>\n</div></li></ul></div></div></div><div id='method-compile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-compile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-compile' class='name expandable'>compile</a>( <span class='pre'>String jsonString</span> ) : <a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a></div><div class='description'><div class='short'>Parses a DyNAML string into a library. ...</div><div class='long'><p>Parses a DyNAML string into a library. Throws\na <a href=\"#!/api/App.dynamic.DynamlError\" rel=\"App.dynamic.DynamlError\" class=\"docClass\">DynamlError</a> on failure.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>jsonString</span> : String<div class='sub-desc'><p>A string-representation of a JSON DyNAML specification</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a></span><div class='sub-desc'><p>library</p>\n</div></li></ul></div></div></div><div id='method-compileLibrary' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-compileLibrary' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-compileLibrary' class='name expandable'>compileLibrary</a>( <span class='pre'>Object libraryConfig</span> ) : <a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a></div><div class='description'><div class='short'>Compiles a library configuration object\ninto a compiled library. ...</div><div class='long'><p>Compiles a <a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">library</a> configuration object\ninto a compiled library.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>libraryConfig</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a></span><div class='sub-desc'><p>library</p>\n</div></li></ul></div></div></div><div id='method-expandRole' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-expandRole' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-expandRole' class='name expandable'>expandRole</a>( <span class='pre'>String type, String str</span> )</div><div class='description'><div class='short'>Expands a compact \"role specifier\" to a full role name. ...</div><div class='long'><p>Expands a compact \"role specifier\" to a full role name. Allows shorthand role names\nto be used to reduce typing. Short-hand names available:</p>\n\n<ul>\n<li>For <a href=\"#!/api/App.dynamic.Domain\" rel=\"App.dynamic.Domain\" class=\"docClass\">Domains</a>:\n\n<pre><code>-   `i` : input\n-   `o` : output\n-   `b` : bridge\n-   `s` or `x` : structural\n</code></pre></li>\n<li>For <a href=\"#!/api/App.dynamic.Segment\" rel=\"App.dynamic.Segment\" class=\"docClass\">Segments</a>:\n\n<pre><code>-   `t` or `th` : toehold\n-   `c` or `cl` : clamp\n</code></pre></li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p><code>domain</code> or `segment</p>\n</div></li><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The role specifier to be expanded</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-parse' class='name expandable'>parse</a>( <span class='pre'>String jsonString</span> ) : Object</div><div class='description'><div class='short'>Parses a DyNAML string into JSON library configuration object. ...</div><div class='long'><p>Parses a DyNAML string into JSON library configuration object. Throws\na <a href=\"#!/api/App.dynamic.DynamlError\" rel=\"App.dynamic.DynamlError\" class=\"docClass\">DynamlError</a> on failure.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>jsonString</span> : String<div class='sub-desc'><p>A string-representation of a JSON DyNAML specification</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>library</p>\n</div></li></ul></div></div></div><div id='method-parseDomainOrSegmentString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-parseDomainOrSegmentString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-parseDomainOrSegmentString' class='name expandable'>parseDomainOrSegmentString</a>( <span class='pre'>String str, Boolean parseIdentifier</span> ) : Object</div><div class='description'><div class='short'>Accepts as input either a Domain string or a Segment string\nand returns a Domain specification ...</div><div class='long'><p>Accepts as input either a <a href=\"#!/api/App.dynamic.Compiler-method-parseDomainString\" rel=\"App.dynamic.Compiler-method-parseDomainString\" class=\"docClass\">Domain string</a> or a <a href=\"#!/api/App.dynamic.Compiler-method-parseSegmentString\" rel=\"App.dynamic.Compiler-method-parseSegmentString\" class=\"docClass\">Segment string</a>\nand returns a Domain specification</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>String to parse</p>\n</div></li><li><span class='pre'>parseIdentifier</span> : Boolean<div class='sub-desc'><p>True to parse identifiers (see <a href=\"#!/api/App.dynamic.Compiler-method-parseDomainString\" rel=\"App.dynamic.Compiler-method-parseDomainString\" class=\"docClass\">parseDomainString</a>)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Domain configuration object (see <a href=\"#!/api/App.dynamic.Compiler-method-parseDomainString\" rel=\"App.dynamic.Compiler-method-parseDomainString\" class=\"docClass\">parseDomainString</a>)</p>\n</div></li></ul></div></div></div><div id='method-parseDomainString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-parseDomainString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-parseDomainString' class='name expandable'>parseDomainString</a>( <span class='pre'>String str, [Boolean parseIdentifier]</span> ) : <a href=\"#!/api/App.dynamic.Domain\" rel=\"App.dynamic.Domain\" class=\"docClass\">App.dynamic.Domain</a>[]</div><div class='description'><div class='short'>Accepts a domain list in a compact, string representation. ...</div><div class='long'><p>Accepts a domain list in a compact, string representation.</p>\n\n<p>ex: d1[a<em>(8) b</em> c(2)]i- d2[d:t e f*]o</p>\n\n<p>The format is as follows:\n<em>name</em> [<em>segments</em>] <em>role (optional)</em> <em>polarity (optional)</em></p>\n\n<pre><code>-   `name` is any alphanumeric string (underscores allowed),\n-   `segments` is a space-separated list of segments in <a href=\"#!/api/App.dynamic.Compiler-method-parseSegmentString\" rel=\"App.dynamic.Compiler-method-parseSegmentString\" class=\"docClass\">string format</a>\n-   `role` is a role name or <a href=\"#!/api/App.dynamic.Compiler-method-expandRole\" rel=\"App.dynamic.Compiler-method-expandRole\" class=\"docClass\">role specifier</a>\n-   `polarity` is an optional <a href=\"#!/api/App.dynamic.Domain-property-polarity\" rel=\"App.dynamic.Domain-property-polarity\" class=\"docClass\">App.dynamic.Domain.polarity</a> polarity specifier: `+` or `-`\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The domain string to parse</p>\n</div></li><li><span class='pre'>parseIdentifier</span> : Boolean (optional)<div class='sub-desc'><p>See <a href=\"#!/api/App.dynamic.Compiler-method-parseSegmentString\" rel=\"App.dynamic.Compiler-method-parseSegmentString\" class=\"docClass\">parseSegmentString</a>.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/App.dynamic.Domain\" rel=\"App.dynamic.Domain\" class=\"docClass\">App.dynamic.Domain</a>[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parseSegmentString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-parseSegmentString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-parseSegmentString' class='name expandable'>parseSegmentString</a>( <span class='pre'>String str, [Boolean parseIdentifier]</span> ) : <a href=\"#!/api/App.dynamic.Segment\" rel=\"App.dynamic.Segment\" class=\"docClass\">App.dynamic.Segment</a>[]</div><div class='description'><div class='short'>Accepts a segment list in a compact, string representation\nand converts it to valid DyNAML\n\nex: a(8) bt c(2) d:c\n\nThe...</div><div class='long'><p>Accepts a segment list in a compact, string representation\nand converts it to valid DyNAML</p>\n\n<p>ex: a<em>(8) b</em>t c(2) d:c</p>\n\n<p>The format is as follows:\n<em>name</em> (<em>length (optional)</em>) <em>role</em></p>\n\n<ul>\n<li><code>name</code> is any alphanumeric string (underscores allowed) with an optional <a href=\"#!/api/App.dynamic.Segment-cfg-polarity\" rel=\"App.dynamic.Segment-cfg-polarity\" class=\"docClass\">polarity specifier</a>\n\n<ul>\n<li><code>length</code> is the length of the Segment in bases</li>\n<li><code>role</code> is a <a href=\"#!/api/App.dynamic.Segment-cfg-role\" rel=\"App.dynamic.Segment-cfg-role\" class=\"docClass\">role name</a> or <a href=\"#!/api/App.dynamic.Compiler-method-expandRole\" rel=\"App.dynamic.Compiler-method-expandRole\" class=\"docClass\">role specifier</a>. If</li>\n</ul>\n</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>Space-separated segment string to be parsed</p>\n</div></li><li><span class='pre'>parseIdentifier</span> : Boolean (optional)<div class='sub-desc'><p>True to parse the <code>name</code> portion into an <code>identity</code> and <code>polarity</code> using <a href=\"#!/api/DNA-method-parseIdentifier\" rel=\"DNA-method-parseIdentifier\" class=\"docClass\">DNA.parseIdentifier</a></p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/App.dynamic.Segment\" rel=\"App.dynamic.Segment\" class=\"docClass\">App.dynamic.Segment</a>[]</span><div class='sub-desc'><p>segments</p>\n</div></li></ul></div></div></div><div id='method-printDomainString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-printDomainString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-printDomainString' class='name expandable'>printDomainString</a>( <span class='pre'>App.Compiler.Domain[] doms, [Number polarity], [Boolean omitLengths]</span> )</div><div class='description'><div class='short'>Accepts an array of App.Compiler.Domain objects, and produces a compact,\ntext-based representation. ...</div><div class='long'><p>Accepts an array of App.Compiler.Domain objects, and produces a compact,\ntext-based representation. Inverse of <a href=\"#!/api/App.dynamic.Compiler-method-parseDomainString\" rel=\"App.dynamic.Compiler-method-parseDomainString\" class=\"docClass\">parseDomainString</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>doms</span> : App.Compiler.Domain[]<div class='sub-desc'>\n</div></li><li><span class='pre'>polarity</span> : Number (optional)<div class='sub-desc'><p>Set to -1 to flip the output segmentwise</p>\n<p>Defaults to: <code>1</code></p></div></li><li><span class='pre'>omitLengths</span> : Boolean (optional)<div class='sub-desc'><p>True to output the domain string without parenthesized length specifiers</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-printSegmentString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-printSegmentString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-printSegmentString' class='name expandable'>printSegmentString</a>( <span class='pre'><a href=\"#!/api/App.dynamic.Segment\" rel=\"App.dynamic.Segment\" class=\"docClass\">App.dynamic.Segment</a>[] segments</span> ) : String</div><div class='description'><div class='short'>Accepts a list of segments and prints compact segment specifiers. ...</div><div class='long'><p>Accepts a list of segments and prints compact segment specifiers.\nInverse of <a href=\"#!/api/App.dynamic.Compiler-method-parseSegmentString\" rel=\"App.dynamic.Compiler-method-parseSegmentString\" class=\"docClass\">parseSegmentString</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>segments</span> : <a href=\"#!/api/App.dynamic.Segment\" rel=\"App.dynamic.Segment\" class=\"docClass\">App.dynamic.Segment</a>[]<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>str\nSpace-separated segment string to be parsed</p>\n</div></li></ul></div></div></div><div id='method-printStrands' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='App.dynamic.Compiler'>App.dynamic.Compiler</span><br/><a href='source/dynamic.html#App-dynamic-Compiler-method-printStrands' target='_blank' class='view-source'>view source</a></div><a href='#!/api/App.dynamic.Compiler-method-printStrands' class='name expandable'>printStrands</a>( <span class='pre'><a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a> library, [Object options]</span> )</div><div class='description'><div class='short'>Prints a textual description of a given library for sequence design ...</div><div class='long'><p>Prints a textual description of a given library for sequence design</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>library</span> : <a href=\"#!/api/App.dynamic.Library\" rel=\"App.dynamic.Library\" class=\"docClass\">App.dynamic.Library</a><div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'>\n<ul><li><span class='pre'>annotations</span> : Object (optional)<div class='sub-desc'><p>True to display brackets around domains and to indicate strand/domain polarities</p>\n<p>Defaults to: <code>true</code></p></div></li><li><span class='pre'>originalSegmentNames</span> : Object (optional)<div class='sub-desc'><p>True to use the original <a href=\"#!/api/App.dynamic.Segment-cfg-name\" rel=\"App.dynamic.Segment-cfg-name\" class=\"docClass\">segment names</a> in the strand descriptions</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></li></ul></div></div></div></div></div></div></div>","parentMixins":[],"html_meta":{},"aliases":{},"files":[{"href":"dynamic.html#App-dynamic-Compiler","filename":"dynamic.js"}],"superclasses":[],"tagname":"class","requires":[],"members":{"event":[],"property":[{"owner":"App.dynamic.Compiler","meta":{},"tagname":"property","name":"standardMotifs","id":"property-standardMotifs"}],"css_var":[],"method":[{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"abbrevRole","id":"method-abbrevRole"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"compile","id":"method-compile"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"compileLibrary","id":"method-compileLibrary"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"expandRole","id":"method-expandRole"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"parse","id":"method-parse"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"parseDomainOrSegmentString","id":"method-parseDomainOrSegmentString"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"parseDomainString","id":"method-parseDomainString"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"parseSegmentString","id":"method-parseSegmentString"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"printDomainString","id":"method-printDomainString"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"printSegmentString","id":"method-printSegmentString"},{"owner":"App.dynamic.Compiler","meta":{},"tagname":"method","name":"printStrands","id":"method-printStrands"}],"css_mixin":[],"cfg":[]},"alternateClassNames":[],"inheritdoc":null,"name":"App.dynamic.Compiler","extends":null,"id":"class-App.dynamic.Compiler","singleton":true,"uses":[],"statics":{"property":[],"event":[],"method":[],"css_var":[],"css_mixin":[],"cfg":[]}});