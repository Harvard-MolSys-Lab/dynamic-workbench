# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = lib
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libRNA_a_AR = $(AR) $(ARFLAGS)
libRNA_a_LIBADD =
am_libRNA_a_OBJECTS = libRNA_a-dist_vars.$(OBJEXT) \
	libRNA_a-fold_vars.$(OBJEXT) libRNA_a-part_func.$(OBJEXT) \
	libRNA_a-read_epars.$(OBJEXT) libRNA_a-treedist.$(OBJEXT) \
	libRNA_a-energy_par.$(OBJEXT) libRNA_a-inverse.$(OBJEXT) \
	libRNA_a-ProfileDist.$(OBJEXT) libRNA_a-RNAstruct.$(OBJEXT) \
	libRNA_a-utils.$(OBJEXT) libRNA_a-fold.$(OBJEXT) \
	libRNA_a-naview.$(OBJEXT) libRNA_a-PS_dot.$(OBJEXT) \
	libRNA_a-stringdist.$(OBJEXT) libRNA_a-params.$(OBJEXT) \
	libRNA_a-subopt.$(OBJEXT) libRNA_a-list.$(OBJEXT) \
	libRNA_a-Lfold.$(OBJEXT) libRNA_a-cofold.$(OBJEXT) \
	libRNA_a-part_func_co.$(OBJEXT) libRNA_a-ProfileAln.$(OBJEXT) \
	libRNA_a-duplex.$(OBJEXT) libRNA_a-alifold.$(OBJEXT) \
	libRNA_a-alipfold.$(OBJEXT) libRNA_a-aln_util.$(OBJEXT) \
	libRNA_a-LPfold.$(OBJEXT) libRNA_a-part_func_up.$(OBJEXT) \
	libRNA_a-ribo.$(OBJEXT) libRNA_a-findpath.$(OBJEXT) \
	libRNA_a-MEA.$(OBJEXT)
libRNA_a_OBJECTS = $(am_libRNA_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libRNA_a_SOURCES)
DIST_SOURCES = $(libRNA_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FPIC = @FPIC@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERLPREFIX = @PERLPREFIX@
PerlCmd = @PerlCmd@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libRNA.a
libRNA_a_SOURCES = dist_vars.c fold_vars.c part_func.c read_epars.c\
	treedist.c energy_par.c inverse.c ProfileDist.c RNAstruct.c utils.c\
	fold.c naview.c PS_dot.c stringdist.c params.c subopt.c list.c \
        Lfold.c cofold.c part_func_co.c ProfileAln.c duplex.c alifold.c \
	alipfold.c aln_util.c LPfold.c part_func_up.c ribo.c findpath.c MEA.c

libRNA_a_CFLAGS = $(AM_CFLAGS) @FPIC@
noinst_HEADERS = intloops.h list.h
EXTRA_DIST = circfold.inc alicircfold.inc
INCLUDES = -I$(srcdir)/../H
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libRNA.a: $(libRNA_a_OBJECTS) $(libRNA_a_DEPENDENCIES) 
	-rm -f libRNA.a
	$(libRNA_a_AR) libRNA.a $(libRNA_a_OBJECTS) $(libRNA_a_LIBADD)
	$(RANLIB) libRNA.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-LPfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-Lfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-MEA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-PS_dot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-ProfileAln.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-ProfileDist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-RNAstruct.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-alifold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-alipfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-aln_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-cofold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-dist_vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-duplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-energy_par.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-findpath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-fold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-fold_vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-inverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-naview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-params.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-part_func.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-part_func_co.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-part_func_up.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-read_epars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-ribo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-stringdist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-subopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-treedist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libRNA_a-utils.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libRNA_a-dist_vars.o: dist_vars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-dist_vars.o -MD -MP -MF $(DEPDIR)/libRNA_a-dist_vars.Tpo -c -o libRNA_a-dist_vars.o `test -f 'dist_vars.c' || echo '$(srcdir)/'`dist_vars.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-dist_vars.Tpo $(DEPDIR)/libRNA_a-dist_vars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dist_vars.c' object='libRNA_a-dist_vars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-dist_vars.o `test -f 'dist_vars.c' || echo '$(srcdir)/'`dist_vars.c

libRNA_a-dist_vars.obj: dist_vars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-dist_vars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-dist_vars.Tpo -c -o libRNA_a-dist_vars.obj `if test -f 'dist_vars.c'; then $(CYGPATH_W) 'dist_vars.c'; else $(CYGPATH_W) '$(srcdir)/dist_vars.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-dist_vars.Tpo $(DEPDIR)/libRNA_a-dist_vars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dist_vars.c' object='libRNA_a-dist_vars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-dist_vars.obj `if test -f 'dist_vars.c'; then $(CYGPATH_W) 'dist_vars.c'; else $(CYGPATH_W) '$(srcdir)/dist_vars.c'; fi`

libRNA_a-fold_vars.o: fold_vars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold_vars.o -MD -MP -MF $(DEPDIR)/libRNA_a-fold_vars.Tpo -c -o libRNA_a-fold_vars.o `test -f 'fold_vars.c' || echo '$(srcdir)/'`fold_vars.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-fold_vars.Tpo $(DEPDIR)/libRNA_a-fold_vars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fold_vars.c' object='libRNA_a-fold_vars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold_vars.o `test -f 'fold_vars.c' || echo '$(srcdir)/'`fold_vars.c

libRNA_a-fold_vars.obj: fold_vars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold_vars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-fold_vars.Tpo -c -o libRNA_a-fold_vars.obj `if test -f 'fold_vars.c'; then $(CYGPATH_W) 'fold_vars.c'; else $(CYGPATH_W) '$(srcdir)/fold_vars.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-fold_vars.Tpo $(DEPDIR)/libRNA_a-fold_vars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fold_vars.c' object='libRNA_a-fold_vars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold_vars.obj `if test -f 'fold_vars.c'; then $(CYGPATH_W) 'fold_vars.c'; else $(CYGPATH_W) '$(srcdir)/fold_vars.c'; fi`

libRNA_a-part_func.o: part_func.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func.Tpo -c -o libRNA_a-part_func.o `test -f 'part_func.c' || echo '$(srcdir)/'`part_func.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func.Tpo $(DEPDIR)/libRNA_a-part_func.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func.c' object='libRNA_a-part_func.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func.o `test -f 'part_func.c' || echo '$(srcdir)/'`part_func.c

libRNA_a-part_func.obj: part_func.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func.Tpo -c -o libRNA_a-part_func.obj `if test -f 'part_func.c'; then $(CYGPATH_W) 'part_func.c'; else $(CYGPATH_W) '$(srcdir)/part_func.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func.Tpo $(DEPDIR)/libRNA_a-part_func.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func.c' object='libRNA_a-part_func.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func.obj `if test -f 'part_func.c'; then $(CYGPATH_W) 'part_func.c'; else $(CYGPATH_W) '$(srcdir)/part_func.c'; fi`

libRNA_a-read_epars.o: read_epars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-read_epars.o -MD -MP -MF $(DEPDIR)/libRNA_a-read_epars.Tpo -c -o libRNA_a-read_epars.o `test -f 'read_epars.c' || echo '$(srcdir)/'`read_epars.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-read_epars.Tpo $(DEPDIR)/libRNA_a-read_epars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='read_epars.c' object='libRNA_a-read_epars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-read_epars.o `test -f 'read_epars.c' || echo '$(srcdir)/'`read_epars.c

libRNA_a-read_epars.obj: read_epars.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-read_epars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-read_epars.Tpo -c -o libRNA_a-read_epars.obj `if test -f 'read_epars.c'; then $(CYGPATH_W) 'read_epars.c'; else $(CYGPATH_W) '$(srcdir)/read_epars.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-read_epars.Tpo $(DEPDIR)/libRNA_a-read_epars.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='read_epars.c' object='libRNA_a-read_epars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-read_epars.obj `if test -f 'read_epars.c'; then $(CYGPATH_W) 'read_epars.c'; else $(CYGPATH_W) '$(srcdir)/read_epars.c'; fi`

libRNA_a-treedist.o: treedist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-treedist.o -MD -MP -MF $(DEPDIR)/libRNA_a-treedist.Tpo -c -o libRNA_a-treedist.o `test -f 'treedist.c' || echo '$(srcdir)/'`treedist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-treedist.Tpo $(DEPDIR)/libRNA_a-treedist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='treedist.c' object='libRNA_a-treedist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-treedist.o `test -f 'treedist.c' || echo '$(srcdir)/'`treedist.c

libRNA_a-treedist.obj: treedist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-treedist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-treedist.Tpo -c -o libRNA_a-treedist.obj `if test -f 'treedist.c'; then $(CYGPATH_W) 'treedist.c'; else $(CYGPATH_W) '$(srcdir)/treedist.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-treedist.Tpo $(DEPDIR)/libRNA_a-treedist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='treedist.c' object='libRNA_a-treedist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-treedist.obj `if test -f 'treedist.c'; then $(CYGPATH_W) 'treedist.c'; else $(CYGPATH_W) '$(srcdir)/treedist.c'; fi`

libRNA_a-energy_par.o: energy_par.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-energy_par.o -MD -MP -MF $(DEPDIR)/libRNA_a-energy_par.Tpo -c -o libRNA_a-energy_par.o `test -f 'energy_par.c' || echo '$(srcdir)/'`energy_par.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-energy_par.Tpo $(DEPDIR)/libRNA_a-energy_par.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='energy_par.c' object='libRNA_a-energy_par.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-energy_par.o `test -f 'energy_par.c' || echo '$(srcdir)/'`energy_par.c

libRNA_a-energy_par.obj: energy_par.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-energy_par.obj -MD -MP -MF $(DEPDIR)/libRNA_a-energy_par.Tpo -c -o libRNA_a-energy_par.obj `if test -f 'energy_par.c'; then $(CYGPATH_W) 'energy_par.c'; else $(CYGPATH_W) '$(srcdir)/energy_par.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-energy_par.Tpo $(DEPDIR)/libRNA_a-energy_par.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='energy_par.c' object='libRNA_a-energy_par.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-energy_par.obj `if test -f 'energy_par.c'; then $(CYGPATH_W) 'energy_par.c'; else $(CYGPATH_W) '$(srcdir)/energy_par.c'; fi`

libRNA_a-inverse.o: inverse.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-inverse.o -MD -MP -MF $(DEPDIR)/libRNA_a-inverse.Tpo -c -o libRNA_a-inverse.o `test -f 'inverse.c' || echo '$(srcdir)/'`inverse.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-inverse.Tpo $(DEPDIR)/libRNA_a-inverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inverse.c' object='libRNA_a-inverse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-inverse.o `test -f 'inverse.c' || echo '$(srcdir)/'`inverse.c

libRNA_a-inverse.obj: inverse.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-inverse.obj -MD -MP -MF $(DEPDIR)/libRNA_a-inverse.Tpo -c -o libRNA_a-inverse.obj `if test -f 'inverse.c'; then $(CYGPATH_W) 'inverse.c'; else $(CYGPATH_W) '$(srcdir)/inverse.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-inverse.Tpo $(DEPDIR)/libRNA_a-inverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inverse.c' object='libRNA_a-inverse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-inverse.obj `if test -f 'inverse.c'; then $(CYGPATH_W) 'inverse.c'; else $(CYGPATH_W) '$(srcdir)/inverse.c'; fi`

libRNA_a-ProfileDist.o: ProfileDist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileDist.o -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileDist.Tpo -c -o libRNA_a-ProfileDist.o `test -f 'ProfileDist.c' || echo '$(srcdir)/'`ProfileDist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ProfileDist.Tpo $(DEPDIR)/libRNA_a-ProfileDist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ProfileDist.c' object='libRNA_a-ProfileDist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileDist.o `test -f 'ProfileDist.c' || echo '$(srcdir)/'`ProfileDist.c

libRNA_a-ProfileDist.obj: ProfileDist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileDist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileDist.Tpo -c -o libRNA_a-ProfileDist.obj `if test -f 'ProfileDist.c'; then $(CYGPATH_W) 'ProfileDist.c'; else $(CYGPATH_W) '$(srcdir)/ProfileDist.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ProfileDist.Tpo $(DEPDIR)/libRNA_a-ProfileDist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ProfileDist.c' object='libRNA_a-ProfileDist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileDist.obj `if test -f 'ProfileDist.c'; then $(CYGPATH_W) 'ProfileDist.c'; else $(CYGPATH_W) '$(srcdir)/ProfileDist.c'; fi`

libRNA_a-RNAstruct.o: RNAstruct.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-RNAstruct.o -MD -MP -MF $(DEPDIR)/libRNA_a-RNAstruct.Tpo -c -o libRNA_a-RNAstruct.o `test -f 'RNAstruct.c' || echo '$(srcdir)/'`RNAstruct.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-RNAstruct.Tpo $(DEPDIR)/libRNA_a-RNAstruct.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='RNAstruct.c' object='libRNA_a-RNAstruct.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-RNAstruct.o `test -f 'RNAstruct.c' || echo '$(srcdir)/'`RNAstruct.c

libRNA_a-RNAstruct.obj: RNAstruct.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-RNAstruct.obj -MD -MP -MF $(DEPDIR)/libRNA_a-RNAstruct.Tpo -c -o libRNA_a-RNAstruct.obj `if test -f 'RNAstruct.c'; then $(CYGPATH_W) 'RNAstruct.c'; else $(CYGPATH_W) '$(srcdir)/RNAstruct.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-RNAstruct.Tpo $(DEPDIR)/libRNA_a-RNAstruct.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='RNAstruct.c' object='libRNA_a-RNAstruct.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-RNAstruct.obj `if test -f 'RNAstruct.c'; then $(CYGPATH_W) 'RNAstruct.c'; else $(CYGPATH_W) '$(srcdir)/RNAstruct.c'; fi`

libRNA_a-utils.o: utils.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-utils.o -MD -MP -MF $(DEPDIR)/libRNA_a-utils.Tpo -c -o libRNA_a-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-utils.Tpo $(DEPDIR)/libRNA_a-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utils.c' object='libRNA_a-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

libRNA_a-utils.obj: utils.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-utils.obj -MD -MP -MF $(DEPDIR)/libRNA_a-utils.Tpo -c -o libRNA_a-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-utils.Tpo $(DEPDIR)/libRNA_a-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utils.c' object='libRNA_a-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

libRNA_a-fold.o: fold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold.o -MD -MP -MF $(DEPDIR)/libRNA_a-fold.Tpo -c -o libRNA_a-fold.o `test -f 'fold.c' || echo '$(srcdir)/'`fold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-fold.Tpo $(DEPDIR)/libRNA_a-fold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fold.c' object='libRNA_a-fold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold.o `test -f 'fold.c' || echo '$(srcdir)/'`fold.c

libRNA_a-fold.obj: fold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-fold.Tpo -c -o libRNA_a-fold.obj `if test -f 'fold.c'; then $(CYGPATH_W) 'fold.c'; else $(CYGPATH_W) '$(srcdir)/fold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-fold.Tpo $(DEPDIR)/libRNA_a-fold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fold.c' object='libRNA_a-fold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold.obj `if test -f 'fold.c'; then $(CYGPATH_W) 'fold.c'; else $(CYGPATH_W) '$(srcdir)/fold.c'; fi`

libRNA_a-naview.o: naview.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-naview.o -MD -MP -MF $(DEPDIR)/libRNA_a-naview.Tpo -c -o libRNA_a-naview.o `test -f 'naview.c' || echo '$(srcdir)/'`naview.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-naview.Tpo $(DEPDIR)/libRNA_a-naview.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='naview.c' object='libRNA_a-naview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-naview.o `test -f 'naview.c' || echo '$(srcdir)/'`naview.c

libRNA_a-naview.obj: naview.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-naview.obj -MD -MP -MF $(DEPDIR)/libRNA_a-naview.Tpo -c -o libRNA_a-naview.obj `if test -f 'naview.c'; then $(CYGPATH_W) 'naview.c'; else $(CYGPATH_W) '$(srcdir)/naview.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-naview.Tpo $(DEPDIR)/libRNA_a-naview.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='naview.c' object='libRNA_a-naview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-naview.obj `if test -f 'naview.c'; then $(CYGPATH_W) 'naview.c'; else $(CYGPATH_W) '$(srcdir)/naview.c'; fi`

libRNA_a-PS_dot.o: PS_dot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-PS_dot.o -MD -MP -MF $(DEPDIR)/libRNA_a-PS_dot.Tpo -c -o libRNA_a-PS_dot.o `test -f 'PS_dot.c' || echo '$(srcdir)/'`PS_dot.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-PS_dot.Tpo $(DEPDIR)/libRNA_a-PS_dot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='PS_dot.c' object='libRNA_a-PS_dot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-PS_dot.o `test -f 'PS_dot.c' || echo '$(srcdir)/'`PS_dot.c

libRNA_a-PS_dot.obj: PS_dot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-PS_dot.obj -MD -MP -MF $(DEPDIR)/libRNA_a-PS_dot.Tpo -c -o libRNA_a-PS_dot.obj `if test -f 'PS_dot.c'; then $(CYGPATH_W) 'PS_dot.c'; else $(CYGPATH_W) '$(srcdir)/PS_dot.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-PS_dot.Tpo $(DEPDIR)/libRNA_a-PS_dot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='PS_dot.c' object='libRNA_a-PS_dot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-PS_dot.obj `if test -f 'PS_dot.c'; then $(CYGPATH_W) 'PS_dot.c'; else $(CYGPATH_W) '$(srcdir)/PS_dot.c'; fi`

libRNA_a-stringdist.o: stringdist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-stringdist.o -MD -MP -MF $(DEPDIR)/libRNA_a-stringdist.Tpo -c -o libRNA_a-stringdist.o `test -f 'stringdist.c' || echo '$(srcdir)/'`stringdist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-stringdist.Tpo $(DEPDIR)/libRNA_a-stringdist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stringdist.c' object='libRNA_a-stringdist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-stringdist.o `test -f 'stringdist.c' || echo '$(srcdir)/'`stringdist.c

libRNA_a-stringdist.obj: stringdist.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-stringdist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-stringdist.Tpo -c -o libRNA_a-stringdist.obj `if test -f 'stringdist.c'; then $(CYGPATH_W) 'stringdist.c'; else $(CYGPATH_W) '$(srcdir)/stringdist.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-stringdist.Tpo $(DEPDIR)/libRNA_a-stringdist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stringdist.c' object='libRNA_a-stringdist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-stringdist.obj `if test -f 'stringdist.c'; then $(CYGPATH_W) 'stringdist.c'; else $(CYGPATH_W) '$(srcdir)/stringdist.c'; fi`

libRNA_a-params.o: params.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-params.o -MD -MP -MF $(DEPDIR)/libRNA_a-params.Tpo -c -o libRNA_a-params.o `test -f 'params.c' || echo '$(srcdir)/'`params.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-params.Tpo $(DEPDIR)/libRNA_a-params.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='params.c' object='libRNA_a-params.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-params.o `test -f 'params.c' || echo '$(srcdir)/'`params.c

libRNA_a-params.obj: params.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-params.obj -MD -MP -MF $(DEPDIR)/libRNA_a-params.Tpo -c -o libRNA_a-params.obj `if test -f 'params.c'; then $(CYGPATH_W) 'params.c'; else $(CYGPATH_W) '$(srcdir)/params.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-params.Tpo $(DEPDIR)/libRNA_a-params.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='params.c' object='libRNA_a-params.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-params.obj `if test -f 'params.c'; then $(CYGPATH_W) 'params.c'; else $(CYGPATH_W) '$(srcdir)/params.c'; fi`

libRNA_a-subopt.o: subopt.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-subopt.o -MD -MP -MF $(DEPDIR)/libRNA_a-subopt.Tpo -c -o libRNA_a-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-subopt.Tpo $(DEPDIR)/libRNA_a-subopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='subopt.c' object='libRNA_a-subopt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c

libRNA_a-subopt.obj: subopt.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-subopt.obj -MD -MP -MF $(DEPDIR)/libRNA_a-subopt.Tpo -c -o libRNA_a-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-subopt.Tpo $(DEPDIR)/libRNA_a-subopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='subopt.c' object='libRNA_a-subopt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`

libRNA_a-list.o: list.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-list.o -MD -MP -MF $(DEPDIR)/libRNA_a-list.Tpo -c -o libRNA_a-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-list.Tpo $(DEPDIR)/libRNA_a-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='list.c' object='libRNA_a-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c

libRNA_a-list.obj: list.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-list.obj -MD -MP -MF $(DEPDIR)/libRNA_a-list.Tpo -c -o libRNA_a-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-list.Tpo $(DEPDIR)/libRNA_a-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='list.c' object='libRNA_a-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`

libRNA_a-Lfold.o: Lfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-Lfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-Lfold.Tpo -c -o libRNA_a-Lfold.o `test -f 'Lfold.c' || echo '$(srcdir)/'`Lfold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-Lfold.Tpo $(DEPDIR)/libRNA_a-Lfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Lfold.c' object='libRNA_a-Lfold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-Lfold.o `test -f 'Lfold.c' || echo '$(srcdir)/'`Lfold.c

libRNA_a-Lfold.obj: Lfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-Lfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-Lfold.Tpo -c -o libRNA_a-Lfold.obj `if test -f 'Lfold.c'; then $(CYGPATH_W) 'Lfold.c'; else $(CYGPATH_W) '$(srcdir)/Lfold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-Lfold.Tpo $(DEPDIR)/libRNA_a-Lfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='Lfold.c' object='libRNA_a-Lfold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-Lfold.obj `if test -f 'Lfold.c'; then $(CYGPATH_W) 'Lfold.c'; else $(CYGPATH_W) '$(srcdir)/Lfold.c'; fi`

libRNA_a-cofold.o: cofold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-cofold.o -MD -MP -MF $(DEPDIR)/libRNA_a-cofold.Tpo -c -o libRNA_a-cofold.o `test -f 'cofold.c' || echo '$(srcdir)/'`cofold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-cofold.Tpo $(DEPDIR)/libRNA_a-cofold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cofold.c' object='libRNA_a-cofold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-cofold.o `test -f 'cofold.c' || echo '$(srcdir)/'`cofold.c

libRNA_a-cofold.obj: cofold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-cofold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-cofold.Tpo -c -o libRNA_a-cofold.obj `if test -f 'cofold.c'; then $(CYGPATH_W) 'cofold.c'; else $(CYGPATH_W) '$(srcdir)/cofold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-cofold.Tpo $(DEPDIR)/libRNA_a-cofold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cofold.c' object='libRNA_a-cofold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-cofold.obj `if test -f 'cofold.c'; then $(CYGPATH_W) 'cofold.c'; else $(CYGPATH_W) '$(srcdir)/cofold.c'; fi`

libRNA_a-part_func_co.o: part_func_co.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_co.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_co.Tpo -c -o libRNA_a-part_func_co.o `test -f 'part_func_co.c' || echo '$(srcdir)/'`part_func_co.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func_co.Tpo $(DEPDIR)/libRNA_a-part_func_co.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func_co.c' object='libRNA_a-part_func_co.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_co.o `test -f 'part_func_co.c' || echo '$(srcdir)/'`part_func_co.c

libRNA_a-part_func_co.obj: part_func_co.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_co.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_co.Tpo -c -o libRNA_a-part_func_co.obj `if test -f 'part_func_co.c'; then $(CYGPATH_W) 'part_func_co.c'; else $(CYGPATH_W) '$(srcdir)/part_func_co.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func_co.Tpo $(DEPDIR)/libRNA_a-part_func_co.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func_co.c' object='libRNA_a-part_func_co.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_co.obj `if test -f 'part_func_co.c'; then $(CYGPATH_W) 'part_func_co.c'; else $(CYGPATH_W) '$(srcdir)/part_func_co.c'; fi`

libRNA_a-ProfileAln.o: ProfileAln.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileAln.o -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileAln.Tpo -c -o libRNA_a-ProfileAln.o `test -f 'ProfileAln.c' || echo '$(srcdir)/'`ProfileAln.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ProfileAln.Tpo $(DEPDIR)/libRNA_a-ProfileAln.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ProfileAln.c' object='libRNA_a-ProfileAln.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileAln.o `test -f 'ProfileAln.c' || echo '$(srcdir)/'`ProfileAln.c

libRNA_a-ProfileAln.obj: ProfileAln.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileAln.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileAln.Tpo -c -o libRNA_a-ProfileAln.obj `if test -f 'ProfileAln.c'; then $(CYGPATH_W) 'ProfileAln.c'; else $(CYGPATH_W) '$(srcdir)/ProfileAln.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ProfileAln.Tpo $(DEPDIR)/libRNA_a-ProfileAln.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ProfileAln.c' object='libRNA_a-ProfileAln.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileAln.obj `if test -f 'ProfileAln.c'; then $(CYGPATH_W) 'ProfileAln.c'; else $(CYGPATH_W) '$(srcdir)/ProfileAln.c'; fi`

libRNA_a-duplex.o: duplex.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-duplex.o -MD -MP -MF $(DEPDIR)/libRNA_a-duplex.Tpo -c -o libRNA_a-duplex.o `test -f 'duplex.c' || echo '$(srcdir)/'`duplex.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-duplex.Tpo $(DEPDIR)/libRNA_a-duplex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='duplex.c' object='libRNA_a-duplex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-duplex.o `test -f 'duplex.c' || echo '$(srcdir)/'`duplex.c

libRNA_a-duplex.obj: duplex.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-duplex.obj -MD -MP -MF $(DEPDIR)/libRNA_a-duplex.Tpo -c -o libRNA_a-duplex.obj `if test -f 'duplex.c'; then $(CYGPATH_W) 'duplex.c'; else $(CYGPATH_W) '$(srcdir)/duplex.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-duplex.Tpo $(DEPDIR)/libRNA_a-duplex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='duplex.c' object='libRNA_a-duplex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-duplex.obj `if test -f 'duplex.c'; then $(CYGPATH_W) 'duplex.c'; else $(CYGPATH_W) '$(srcdir)/duplex.c'; fi`

libRNA_a-alifold.o: alifold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alifold.o -MD -MP -MF $(DEPDIR)/libRNA_a-alifold.Tpo -c -o libRNA_a-alifold.o `test -f 'alifold.c' || echo '$(srcdir)/'`alifold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-alifold.Tpo $(DEPDIR)/libRNA_a-alifold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='alifold.c' object='libRNA_a-alifold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alifold.o `test -f 'alifold.c' || echo '$(srcdir)/'`alifold.c

libRNA_a-alifold.obj: alifold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alifold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-alifold.Tpo -c -o libRNA_a-alifold.obj `if test -f 'alifold.c'; then $(CYGPATH_W) 'alifold.c'; else $(CYGPATH_W) '$(srcdir)/alifold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-alifold.Tpo $(DEPDIR)/libRNA_a-alifold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='alifold.c' object='libRNA_a-alifold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alifold.obj `if test -f 'alifold.c'; then $(CYGPATH_W) 'alifold.c'; else $(CYGPATH_W) '$(srcdir)/alifold.c'; fi`

libRNA_a-alipfold.o: alipfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alipfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-alipfold.Tpo -c -o libRNA_a-alipfold.o `test -f 'alipfold.c' || echo '$(srcdir)/'`alipfold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-alipfold.Tpo $(DEPDIR)/libRNA_a-alipfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='alipfold.c' object='libRNA_a-alipfold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alipfold.o `test -f 'alipfold.c' || echo '$(srcdir)/'`alipfold.c

libRNA_a-alipfold.obj: alipfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alipfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-alipfold.Tpo -c -o libRNA_a-alipfold.obj `if test -f 'alipfold.c'; then $(CYGPATH_W) 'alipfold.c'; else $(CYGPATH_W) '$(srcdir)/alipfold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-alipfold.Tpo $(DEPDIR)/libRNA_a-alipfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='alipfold.c' object='libRNA_a-alipfold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alipfold.obj `if test -f 'alipfold.c'; then $(CYGPATH_W) 'alipfold.c'; else $(CYGPATH_W) '$(srcdir)/alipfold.c'; fi`

libRNA_a-aln_util.o: aln_util.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aln_util.o -MD -MP -MF $(DEPDIR)/libRNA_a-aln_util.Tpo -c -o libRNA_a-aln_util.o `test -f 'aln_util.c' || echo '$(srcdir)/'`aln_util.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-aln_util.Tpo $(DEPDIR)/libRNA_a-aln_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='aln_util.c' object='libRNA_a-aln_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aln_util.o `test -f 'aln_util.c' || echo '$(srcdir)/'`aln_util.c

libRNA_a-aln_util.obj: aln_util.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aln_util.obj -MD -MP -MF $(DEPDIR)/libRNA_a-aln_util.Tpo -c -o libRNA_a-aln_util.obj `if test -f 'aln_util.c'; then $(CYGPATH_W) 'aln_util.c'; else $(CYGPATH_W) '$(srcdir)/aln_util.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-aln_util.Tpo $(DEPDIR)/libRNA_a-aln_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='aln_util.c' object='libRNA_a-aln_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aln_util.obj `if test -f 'aln_util.c'; then $(CYGPATH_W) 'aln_util.c'; else $(CYGPATH_W) '$(srcdir)/aln_util.c'; fi`

libRNA_a-LPfold.o: LPfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-LPfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-LPfold.Tpo -c -o libRNA_a-LPfold.o `test -f 'LPfold.c' || echo '$(srcdir)/'`LPfold.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-LPfold.Tpo $(DEPDIR)/libRNA_a-LPfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='LPfold.c' object='libRNA_a-LPfold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-LPfold.o `test -f 'LPfold.c' || echo '$(srcdir)/'`LPfold.c

libRNA_a-LPfold.obj: LPfold.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-LPfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-LPfold.Tpo -c -o libRNA_a-LPfold.obj `if test -f 'LPfold.c'; then $(CYGPATH_W) 'LPfold.c'; else $(CYGPATH_W) '$(srcdir)/LPfold.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-LPfold.Tpo $(DEPDIR)/libRNA_a-LPfold.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='LPfold.c' object='libRNA_a-LPfold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-LPfold.obj `if test -f 'LPfold.c'; then $(CYGPATH_W) 'LPfold.c'; else $(CYGPATH_W) '$(srcdir)/LPfold.c'; fi`

libRNA_a-part_func_up.o: part_func_up.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_up.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_up.Tpo -c -o libRNA_a-part_func_up.o `test -f 'part_func_up.c' || echo '$(srcdir)/'`part_func_up.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func_up.Tpo $(DEPDIR)/libRNA_a-part_func_up.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func_up.c' object='libRNA_a-part_func_up.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_up.o `test -f 'part_func_up.c' || echo '$(srcdir)/'`part_func_up.c

libRNA_a-part_func_up.obj: part_func_up.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_up.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_up.Tpo -c -o libRNA_a-part_func_up.obj `if test -f 'part_func_up.c'; then $(CYGPATH_W) 'part_func_up.c'; else $(CYGPATH_W) '$(srcdir)/part_func_up.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-part_func_up.Tpo $(DEPDIR)/libRNA_a-part_func_up.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='part_func_up.c' object='libRNA_a-part_func_up.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_up.obj `if test -f 'part_func_up.c'; then $(CYGPATH_W) 'part_func_up.c'; else $(CYGPATH_W) '$(srcdir)/part_func_up.c'; fi`

libRNA_a-ribo.o: ribo.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ribo.o -MD -MP -MF $(DEPDIR)/libRNA_a-ribo.Tpo -c -o libRNA_a-ribo.o `test -f 'ribo.c' || echo '$(srcdir)/'`ribo.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ribo.Tpo $(DEPDIR)/libRNA_a-ribo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ribo.c' object='libRNA_a-ribo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ribo.o `test -f 'ribo.c' || echo '$(srcdir)/'`ribo.c

libRNA_a-ribo.obj: ribo.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ribo.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ribo.Tpo -c -o libRNA_a-ribo.obj `if test -f 'ribo.c'; then $(CYGPATH_W) 'ribo.c'; else $(CYGPATH_W) '$(srcdir)/ribo.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-ribo.Tpo $(DEPDIR)/libRNA_a-ribo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ribo.c' object='libRNA_a-ribo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ribo.obj `if test -f 'ribo.c'; then $(CYGPATH_W) 'ribo.c'; else $(CYGPATH_W) '$(srcdir)/ribo.c'; fi`

libRNA_a-findpath.o: findpath.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-findpath.o -MD -MP -MF $(DEPDIR)/libRNA_a-findpath.Tpo -c -o libRNA_a-findpath.o `test -f 'findpath.c' || echo '$(srcdir)/'`findpath.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-findpath.Tpo $(DEPDIR)/libRNA_a-findpath.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findpath.c' object='libRNA_a-findpath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-findpath.o `test -f 'findpath.c' || echo '$(srcdir)/'`findpath.c

libRNA_a-findpath.obj: findpath.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-findpath.obj -MD -MP -MF $(DEPDIR)/libRNA_a-findpath.Tpo -c -o libRNA_a-findpath.obj `if test -f 'findpath.c'; then $(CYGPATH_W) 'findpath.c'; else $(CYGPATH_W) '$(srcdir)/findpath.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-findpath.Tpo $(DEPDIR)/libRNA_a-findpath.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findpath.c' object='libRNA_a-findpath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-findpath.obj `if test -f 'findpath.c'; then $(CYGPATH_W) 'findpath.c'; else $(CYGPATH_W) '$(srcdir)/findpath.c'; fi`

libRNA_a-MEA.o: MEA.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-MEA.o -MD -MP -MF $(DEPDIR)/libRNA_a-MEA.Tpo -c -o libRNA_a-MEA.o `test -f 'MEA.c' || echo '$(srcdir)/'`MEA.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-MEA.Tpo $(DEPDIR)/libRNA_a-MEA.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='MEA.c' object='libRNA_a-MEA.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-MEA.o `test -f 'MEA.c' || echo '$(srcdir)/'`MEA.c

libRNA_a-MEA.obj: MEA.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-MEA.obj -MD -MP -MF $(DEPDIR)/libRNA_a-MEA.Tpo -c -o libRNA_a-MEA.obj `if test -f 'MEA.c'; then $(CYGPATH_W) 'MEA.c'; else $(CYGPATH_W) '$(srcdir)/MEA.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libRNA_a-MEA.Tpo $(DEPDIR)/libRNA_a-MEA.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='MEA.c' object='libRNA_a-MEA.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-MEA.obj `if test -f 'MEA.c'; then $(CYGPATH_W) 'MEA.c'; else $(CYGPATH_W) '$(srcdir)/MEA.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
