declare system Circuit: ->

import Input_Strand, Translate, Translate_Rev, Translate_Loop
import And21_Rev, And31, Threshold, Detector

# Inputs
component let_7c   = Input_Strand("TGAGGTAGTAGGTTGTATGGT",  21): -> let_7c   # 15nt data region
component miR_124a = Input_Strand("TAAGGCACGCGGTGAATGCC",   20): -> miR_124a # 14nt "
component miR_15a  = Input_Strand("TAGCAGCACATAATGGTTTGTG", 22): -> miR_15a  # 16nt "
# Had to change it ..GTGT to ..GTGC so that it would work in the circuit ...
component miR_10b  = Input_Strand("CCCTGTAGAACCGAATTTGTGC", 22): -> miR_10b  # ---"---
#component miR_143  = Input_Strand("TGAGATGAAGCACTGTAGCTCA", 22): -> miR_143
component miR_122a = Input_Strand("TGGAGTGTGACAATGGTGTTTG", 22): -> miR_122a

# Translation
component K_Jout = Translate(6, 15, 30, 3, 3): let_7c -> Jout
component L_Mout = Translate_Rev(6, 14, 30, 3, 3): miR_124a -> Mout
component T_Sout = Translate(6, 16, 30, 3, 3): miR_15a -> Sout
component V_Uout = Translate(6, 16, 30, 3, 2): miR_10b -> Sout
# We can't design the actual psuedoknotted translater miR_143 -> Rout, so we'll just have Rout as an input
#component R_Rout = Translate(6, 16, 30, 4, 0): miR_143 -> Rout  # Can't design the actual psuedoknotted gate
component O_Nout = Translate(6, 16, 30, 3, 3): miR_122a -> Nout
component I_Hout = Translate_Loop(6, 30, 30, 3, 15): Nout -> Rout

# Circuit
component G_F_Eout = And21_Rev(6, 30, 30, 30, 3, 15): Jout + Mout -> Eout

component Dm_C_B_Aout = And31(6, 30, 30, 30, 30, 3, 15): Sout + Eout + Rout -> Aout

component Thresh = Threshold(6, 30, 30, 30, 30, 3, 15): Aout -> Th_out

#component Det_Out = Detector(6, 30): Th_out -> 
