declare component Translate(t, di, do, c, sp): in(IN) -> out(OUT)

sequence toe_in = "?N" : <t>
sequence data_in = "?N" : <di>
sequence toe_out = "?N" : <t>
sequence data_out = "?N" : <do>

sequence in = toe_in data_in : <t+di>
sequence out = toe_out data_out : <t+do>

strand [dummy] In = in : <t+di>
strand Base = "?N" : <t+di+sp>
strand Out = "?N" out : <di + sp + do - c>

## Structures
structure IN = In : domain .
structure Gate = Out + Base : <di+sp>( <do-c>. + <di+sp>) <t>.

structure IN_waste = In + Base : <t+di>( + <sp>. <t+di>)
structure OUT = Out : domain ..

kinetic IN + Gate -> OUT + IN_waste
