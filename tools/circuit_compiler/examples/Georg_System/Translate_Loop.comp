declare component Translate_Loop(t, di, do, c, end): in(IN) -> out(OUT)

sequence toe_in = "?N" : <t>
sequence data_in = "?N" : <di>
sequence toe_out = "?N" : <t>
sequence data_out = "?N" : <do>

sequence in = toe_in data_in : <t+di>
sequence out = toe_out data_out : <t+do>

strand [dummy] In = in : <t+di>
strand Base = "?N" : <t+di>
strand Out = "?N" out "<end>N" : <do+(di-c)>

## Structures
structure IN = In : domain .
structure Gate = Out + Base : <di-end>( <do-c>. <end>( + <end>) <di-end>) <t>.

structure IN_waste = In + Base : domain (+)
structure OUT = Out : domain ...

kinetic IN + Gate -> OUT + IN_waste
