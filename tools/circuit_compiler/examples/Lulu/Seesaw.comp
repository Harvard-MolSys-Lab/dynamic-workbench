declare component Seesaw(toe, base): ltoe -> rtoe

## Domains
sequence ltoe = "?N" : <toe>   # Left toehold domain
sequence base = "?N" : <base>  # Base recognition region on seesaw gate
sequence rtoe = "?N" : <toe>   # Right toehold

## Strands
strand Left  = base ltoe "<base>N" : <2*base + toe>  # Strand which fits on left side of seesaw (marked STS in paper)
strand Right = "<base>N" rtoe base : <2*base + toe>  # Strand ------------- right side of seesaw (------------------)
strand Base  = ltoe* base* rtoe*   : <2*toe + base>  # Base of the seesaw itself (marked T'S'T' in paper)

## Single-stranded input/output structures
structure LEFT  = Left  : domain ...  # A single-stranded left input (or output)
structure RIGHT = Right : domain ...  # ----------------- right input or output

## Bound gate structures
structure SEESAW_RIGHT = Base + Right : domain .((+.))  # Seesaw in the tipped right position
structure SEESAW_LEFT  = Base + Left  : domain ((.+)).  # Seesaw ------------- left position

## Kinetic pathways
kinetic LEFT + SEESAW_RIGHT -> RIGHT + SEESAW_LEFT  # See
kinetic RIGHT + SEESAW_LEFT -> LEFT + SEESAW_RIGHT  # Saw

